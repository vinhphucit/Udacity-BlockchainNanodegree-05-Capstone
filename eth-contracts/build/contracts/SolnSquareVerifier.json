{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "mode",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        },
        {
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "isCompleted",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isPaused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseTokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "verifierAddress",
          "type": "address"
        },
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "from",
          "type": "address"
        }
      ],
      "name": "AddedSolution",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newToken",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "totalToken",
          "type": "uint256"
        }
      ],
      "name": "PushNewToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerShipTransfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "inputs",
          "type": "uint256[2]"
        },
        {
          "name": "to",
          "type": "address"
        }
      ],
      "name": "mintNewNFT",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.2+commit.1df8f40c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"mode\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"},{\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"isCompleted\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"inputs\",\"type\":\"uint256[2]\"},{\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mintNewNFT\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"verifierAddress\",\"type\":\"address\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"}],\"name\":\"AddedSolution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newToken\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"totalToken\",\"type\":\"uint256\"}],\"name\":\"PushNewToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerShipTransfer\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x982e18d2e3df98e3339f70f955a4d1fb78411a29963d0ea34621759eef67e86d\",\"urls\":[\"bzzr://a5438906da44343a09c6b47666d3649f269d9d156f2109e147e21595b2284363\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\",\"urls\":[\"bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xeb8a266ef2da0aa60eea704031902ffd28b2d13dd0e8f5b69bcfb8415f2dad85\",\"urls\":[\"bzzr://393e9843d41c0652f115378cc58083c4acc4d83f7999fe22932d5e237c215d3f\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xea16b9933153c647242ba50b3e494fb133063d49f1fa81823f35a8c28754142e\",\"urls\":[\"bzzr://aa2b2eb534149525e194341c01cadf666668a1b7d679a268d10e23570a7e26b1\"]},\"project:/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0x21f8846134fadf19bd79669995317ae7f4cc73cd1cd260388c609294c913e5f2\",\"urls\":[\"bzzr://3902b7bad8598f814ab026346c4835ffb00ddcb9f11f4cf10321b7071dec4126\"]},\"project:/contracts/Oraclize.sol\":{\"keccak256\":\"0xe5ebe286b4624095629f76c6ac8dbad3cb305fbdb43fff09e4eebed35a05b49c\",\"urls\":[\"bzzr://f48ebdff8df1cabbd7749c5eb818a6c54a6ba92956a850736bdcfbc9f53f9ffd\"]},\"project:/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0x20b38adc83e8adbe95ea38947791fb83a67ddaf366220cd7f2c04f4a6f134298\",\"urls\":[\"bzzr://3dfe2cec9f698e3ab3c02b2c501e46fa39a7523cb10ab5a50e755f37bae8b5e0\"]},\"project:/contracts/verifier.sol\":{\"keccak256\":\"0x670c08e1164989c06381f0860115428f88ef8e12db21689d959d0e1b7c54530c\",\"urls\":[\"bzzr://7a0aa27b6527080219f7ae267e68e05130c84dc181f2b496b2eb7344c64687c7\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162003dbd38038062003dbd833981018060405260608110156200003757600080fd5b810190808051906020019092919080516401000000008111156200005a57600080fd5b828101905060208101848111156200007157600080fd5b81518560018202830111640100000000821117156200008f57600080fd5b50509291906020018051640100000000811115620000ac57600080fd5b82810190506020810184811115620000c357600080fd5b8151856001820283011164010000000082111715620000e157600080fd5b505092919050505081818181606060405190810160405280603f815260200162003d7e603f91396200012233620002ca640100000000026401000000009004565b60008060146101000a81548160ff021916908315150217905550620001796301ffc9a77c010000000000000000000000000000000000000000000000000000000002620005e7640100000000026401000000009004565b620001b66380ac58cd7c010000000000000000000000000000000000000000000000000000000002620005e7640100000000026401000000009004565b620001f363780e9d637c010000000000000000000000000000000000000000000000000000000002620005e7640100000000026401000000009004565b82600f90805190602001906200020b929190620006a5565b50816010908051906020019062000224929190620006a5565b5080601190805190602001906200023d929190620006a5565b506200027b635b5e139f7c010000000000000000000000000000000000000000000000000000000002620005e7640100000000026401000000009004565b505050505082601360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505062000754565b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806200037357506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1515620003e8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f43616c6c6572206973206e6f7420636f6e7472616374206f776e65720000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156200048e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4e6577206f776e6572206d7573742062652061207265616c206164647265737381525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515620005e45760008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690507f39aa7b32e39346e4d63b7af2df2424277168303b5e5a6e01b6b1a014d501a7ab8183604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b50565b63ffffffff7c010000000000000000000000000000000000000000000000000000000002817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515156200063957600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620006e857805160ff191683800117855562000719565b8280016001018555821562000719579182015b8281111562000718578251825591602001919060010190620006fb565b5b5090506200072891906200072c565b5090565b6200075191905b808211156200074d57600081600090555060010162000733565b5090565b90565b61361a80620007646000396000f3fe608060405234801561001057600080fd5b50600436106101ab576000357c0100000000000000000000000000000000000000000000000000000000900480634f6ccce7116100fb578063b2bdfa7b116100b4578063d547cfb71161008e578063d547cfb714610b9e578063e6bcd74514610c21578063e985e9c514610c6f578063f2fde38b14610ceb576101ab565b8063b2bdfa7b146109a8578063b88d4fde146109f2578063c87b56dd14610af7576101ab565b80634f6ccce7146107ab5780636352211e146107ed57806370a082311461085b57806395d89b41146108b3578063a22cb46514610936578063b187bd2614610986576101ab565b806318160ddd116101685780632f745c59116101425780632f745c591461051957806338bbfa501461057b57806340c10f19146106d757806342842e0e1461073d576101ab565b806318160ddd146103c857806323b872dd146103e657806327dc297e14610454576101ab565b806301ffc9a7146101b057806306fdde0314610215578063081812fc14610298578063095ea7b31461030657806313af40351461035457806316c38b3c14610398575b600080fd5b6101fb600480360360208110156101c657600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610d2f565b604051808215151515815260200191505060405180910390f35b61021d610d97565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561025d578082015181840152602081019050610242565b50505050905090810190601f16801561028a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102c4600480360360208110156102ae57600080fd5b8101908080359060200190929190505050610e39565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103526004803603604081101561031c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ef3565b005b6103966004803603602081101561036a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110d0565b005b6103c6600480360360208110156103ae57600080fd5b810190808035151590602001909291905050506111f8565b005b6103d06113c1565b6040518082815260200191505060405180910390f35b610452600480360360608110156103fc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506113ce565b005b6105176004803603604081101561046a57600080fd5b81019080803590602001909291908035906020019064010000000081111561049157600080fd5b8201836020820111156104a357600080fd5b803590602001918460018302840111640100000000831117156104c557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506113f3565b005b6105656004803603604081101561052f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611436565b6040518082815260200191505060405180910390f35b6106d56004803603606081101561059157600080fd5b8101908080359060200190929190803590602001906401000000008111156105b857600080fd5b8201836020820111156105ca57600080fd5b803590602001918460018302840111640100000000831117156105ec57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561064f57600080fd5b82018360208201111561066157600080fd5b8035906020019184600183028401116401000000008311171561068357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506114ad565b005b610723600480360360408110156106ed57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506114b2565b604051808215151515815260200191505060405180910390f35b6107a96004803603606081101561075357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061162e565b005b6107d7600480360360208110156107c157600080fd5b810190808035906020019092919050505061164f565b6040518082815260200191505060405180910390f35b6108196004803603602081101561080357600080fd5b8101908080359060200190929190505050611687565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61089d6004803603602081101561087157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116c4565b6040518082815260200191505060405180910390f35b6108bb611714565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156108fb5780820151818401526020810190506108e0565b50505050905090810190601f1680156109285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6109846004803603604081101561094c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506117b6565b005b61098e6118f2565b604051808215151515815260200191505060405180910390f35b6109b0611908565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610af560048036036080811015610a0857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610a6f57600080fd5b820183602082011115610a8157600080fd5b80359060200191846001830284011164010000000083111715610aa357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061192d565b005b610b2360048036036020811015610b0d57600080fd5b8101908080359060200190929190505050611955565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610b63578082015181840152602081019050610b48565b50505050905090810190601f168015610b905780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610ba6611a1e565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610be6578082015181840152602081019050610bcb565b50505050905090810190601f168015610c135780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610c6d60048036036060811015610c3757600080fd5b8101908080604001909192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ac0565b005b610cd160048036036040811015610c8557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d68565b604051808215151515815260200191505060405180910390f35b610d2d60048036036020811015610d0157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611dfc565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e2f5780601f10610e0457610100808354040283529160200191610e2f565b820191906000526020600020905b815481529060010190602001808311610e1257829003601f168201915b5050505050905090565b6000610e4482612115565b1515610eb8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f546f6b656e20646f65736e27742065786973740000000000000000000000000081525060200191505060405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610efe82611687565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610f87576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180613552602a913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610fc75750610fc68133611d68565b5b151561101e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604781526020018061357c6047913960600191505060405180910390fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061117857506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b15156111ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f43616c6c6572206973206e6f7420636f6e7472616374206f776e65720000000081525060200191505060405180910390fd5b6111f581611dfc565b50565b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806112a057506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1515611314576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f43616c6c6572206973206e6f7420636f6e7472616374206f776e65720000000081525060200191505060405180910390fd5b801515600060149054906101000a900460ff1615151415156113be5780600060146101000a81548160ff021916908315150217905550600060149054906101000a900460ff1615611390577f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e75260405160405180910390a16113bd565b7fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d1693360405160405180910390a15b5b50565b6000600880549050905090565b6113d83382612187565b15156113e357600080fd5b6113ee83838361221c565b505050565b611432828260006040519080825280601f01601f19166020018201604052801561142c5781602001600182028038833980820191505090505b506114ad565b5050565b6000611441836116c4565b8210151561144e57600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110151561149a57fe5b9060005260206000200154905092915050565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061155b57506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b15156115cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f43616c6c6572206973206e6f7420636f6e7472616374206f776e65720000000081525060200191505060405180910390fd5b7f4948c74cefbdbdaa88ab8f74e485b67c30a7e7c82f48677933ef4314c989ee6b611ae5600c604051808381526020018281526020019250505060405180910390a161161b8383612240565b61162482612261565b6001905092915050565b61164a838383602060405190810160405280600081525061192d565b505050565b60006116596113c1565b8210151561166657600080fd5b60088281548110151561167557fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061170d600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612397565b9050919050565b606060108054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117ac5780601f10611781576101008083540402835291602001916117ac565b820191906000526020600020905b81548152906001019060200180831161178f57829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156117f157600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b60008060149054906101000a900460ff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6119388484846113ce565b611944848484846123a5565b151561194f57600080fd5b50505050565b606061196082612115565b151561196b57600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a125780601f106119e757610100808354040283529160200191611a12565b820191906000526020600020905b8154815290600101906020018083116119f557829003601f168201915b50505050509050919050565b606060118054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ab65780601f10611a8b57610100808354040283529160200191611ab6565b820191906000526020600020905b815481529060010190602001808311611a9957829003601f168201915b5050505050905090565b6000826000600281101515611ad157fe5b6020020135836001600281101515611ae557fe5b602002013560405160200180838152602001828152602001925050506040516020818303038152906040528051906020012090506000601560008381526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515611bf9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f536f6c7574696f6e204e6f74204578697374000000000000000000000000000081525060200191505060405180910390fd5b8060000160009054906101000a900460ff16151515611c80576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f536f6c7574696f6e20576173205265676973746572656400000000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611d47576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f596f7520646964206e6f7420637265617465207468697320736f6c7574696f6e81525060200191505060405180910390fd5b611d558382600101546125c8565b611d628160010154612261565b50505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611ea457506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1515611f18576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f43616c6c6572206973206e6f7420636f6e7472616374206f776e65720000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611fbd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4e6577206f776e6572206d7573742062652061207265616c206164647265737381525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156121125760008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690507f39aa7b32e39346e4d63b7af2df2424277168303b5e5a6e01b6b1a014d501a7ab8183604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b50565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60008061219383611687565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061220257508373ffffffffffffffffffffffffffffffffffffffff166121ea84610e39565b73ffffffffffffffffffffffffffffffffffffffff16145b8061221357506122128185611d68565b5b91505092915050565b6122278383836127e4565b6122318382612a43565b61223b8282612be7565b505050565b61224a82826125c8565b6122548282612be7565b61225d81612cae565b5050565b61226a81612115565b15156122c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602781526020018061352b6027913960400191505060405180910390fd5b61236d60118054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561235a5780601f1061232f5761010080835404028352916020019161235a565b820191906000526020600020905b81548152906001019060200180831161233d57829003601f168201915b505050505061236883612d3e565b612e97565b601260008381526020019081526020016000209080519060200190612393929190613427565b5050565b600081600001549050919050565b60006123c68473ffffffffffffffffffffffffffffffffffffffff16612ede565b15156123d557600190506125c0565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156124cc5780820151818401526020810190506124b1565b50505050905090810190601f1680156124f95780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561251b57600080fd5b505af115801561252f573d6000803e3d6000fd5b505050506040513d602081101561254557600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561266d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f676976656e206164647265737320697320696e76616c6964000000000000000081525060200191505060405180910390fd5b61267681612115565b1515156126eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f746f6b656e496420616c7265616479206578697374730000000000000000000081525060200191505060405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612784600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612ef1565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b8273ffffffffffffffffffffffffffffffffffffffff1661280482611687565b73ffffffffffffffffffffffffffffffffffffffff16141515612872576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806135c3602c913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156128fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806134f96032913960400191505060405180910390fd5b61290381612f07565b61294a600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612fc7565b612991600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612ef1565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000612a9b6001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050612fea90919063ffffffff16565b90506000600760008481526020019081526020016000205490508181141515612b8e576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515612b0c57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515612b6657fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003612be091906134a7565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b7f4948c74cefbdbdaa88ab8f74e485b67c30a7e7c82f48677933ef4314c989ee6b81600880549050604051808381526020018281526020019250505060405180910390a16008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415612d86576040805190810160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612e92565b600082905060005b600082141515612db4578080600101915050600a82811515612dac57fe5b049150612d8e565b6060816040519080825280601f01601f191660200182016040528015612de95781602001600182028038833980820191505090505b50905060006001830390505b600086141515612e8a57600a86811515612e0b57fe5b066030017f010000000000000000000000000000000000000000000000000000000000000002828280600190039350815181101515612e4657fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a86811515612e8257fe5b049550612df5565b819450505050505b919050565b6060612ed6838360206040519081016040528060008152506020604051908101604052806000815250602060405190810160405280600081525061300c565b905092915050565b600080823b905060008111915050919050565b6001816000016000828254019250508190555050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515612fc45760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b612fdf60018260000154612fea90919063ffffffff16565b816000018190555050565b6000828211151515612ffb57600080fd5b600082840390508091505092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156130685781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b885181101561313257888181518110151561309657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156130f557fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061307f565b600090505b87518110156131ea57878181518110151561314e57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156131ad57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613137565b600090505b86518110156132a257868181518110151561320657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561326557fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506131ef565b600090505b855181101561335a5785818151811015156132be57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561331d57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506132a7565b600090505b845181101561341257848181518110151561337657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156133d557fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061335f565b82995050505050505050505095945050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061346857805160ff1916838001178555613496565b82800160010185558215613496579182015b8281111561349557825182559160200191906001019061347a565b5b5090506134a391906134d3565b5090565b8154818355818111156134ce578183600052602060002091820191016134cd91906134d3565b5b505050565b6134f591905b808211156134f15760008160009055506001016134d9565b5090565b9056fe7265717569726520746f6b656e206973206265696e67207472616e73666572656420746f2076616c69642061646472657373726571756972652074686520746f6b656e20657869737473206265666f72652073657474696e676164647265737320746f206e6f7420626520746865206f776e6572206f662074686520746f6b656e496473656e64657220746f20626520746865206f776e6572206f662074686520636f6e7472616374206f72206973417070726f766564466f72416c6c282920746f206265207472756566726f6d206164647265737320697320746865206f776e6572206f662074686520676976656e20746f6b656ea165627a7a723058204a905e88a9354aa45d44cc15646f81690280f14106f34a2851920650ab98ae7e002968747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101ab576000357c0100000000000000000000000000000000000000000000000000000000900480634f6ccce7116100fb578063b2bdfa7b116100b4578063d547cfb71161008e578063d547cfb714610b9e578063e6bcd74514610c21578063e985e9c514610c6f578063f2fde38b14610ceb576101ab565b8063b2bdfa7b146109a8578063b88d4fde146109f2578063c87b56dd14610af7576101ab565b80634f6ccce7146107ab5780636352211e146107ed57806370a082311461085b57806395d89b41146108b3578063a22cb46514610936578063b187bd2614610986576101ab565b806318160ddd116101685780632f745c59116101425780632f745c591461051957806338bbfa501461057b57806340c10f19146106d757806342842e0e1461073d576101ab565b806318160ddd146103c857806323b872dd146103e657806327dc297e14610454576101ab565b806301ffc9a7146101b057806306fdde0314610215578063081812fc14610298578063095ea7b31461030657806313af40351461035457806316c38b3c14610398575b600080fd5b6101fb600480360360208110156101c657600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610d2f565b604051808215151515815260200191505060405180910390f35b61021d610d97565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561025d578082015181840152602081019050610242565b50505050905090810190601f16801561028a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102c4600480360360208110156102ae57600080fd5b8101908080359060200190929190505050610e39565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103526004803603604081101561031c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ef3565b005b6103966004803603602081101561036a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110d0565b005b6103c6600480360360208110156103ae57600080fd5b810190808035151590602001909291905050506111f8565b005b6103d06113c1565b6040518082815260200191505060405180910390f35b610452600480360360608110156103fc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506113ce565b005b6105176004803603604081101561046a57600080fd5b81019080803590602001909291908035906020019064010000000081111561049157600080fd5b8201836020820111156104a357600080fd5b803590602001918460018302840111640100000000831117156104c557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506113f3565b005b6105656004803603604081101561052f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611436565b6040518082815260200191505060405180910390f35b6106d56004803603606081101561059157600080fd5b8101908080359060200190929190803590602001906401000000008111156105b857600080fd5b8201836020820111156105ca57600080fd5b803590602001918460018302840111640100000000831117156105ec57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561064f57600080fd5b82018360208201111561066157600080fd5b8035906020019184600183028401116401000000008311171561068357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506114ad565b005b610723600480360360408110156106ed57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506114b2565b604051808215151515815260200191505060405180910390f35b6107a96004803603606081101561075357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061162e565b005b6107d7600480360360208110156107c157600080fd5b810190808035906020019092919050505061164f565b6040518082815260200191505060405180910390f35b6108196004803603602081101561080357600080fd5b8101908080359060200190929190505050611687565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61089d6004803603602081101561087157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116c4565b6040518082815260200191505060405180910390f35b6108bb611714565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156108fb5780820151818401526020810190506108e0565b50505050905090810190601f1680156109285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6109846004803603604081101561094c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506117b6565b005b61098e6118f2565b604051808215151515815260200191505060405180910390f35b6109b0611908565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610af560048036036080811015610a0857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610a6f57600080fd5b820183602082011115610a8157600080fd5b80359060200191846001830284011164010000000083111715610aa357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061192d565b005b610b2360048036036020811015610b0d57600080fd5b8101908080359060200190929190505050611955565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610b63578082015181840152602081019050610b48565b50505050905090810190601f168015610b905780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610ba6611a1e565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610be6578082015181840152602081019050610bcb565b50505050905090810190601f168015610c135780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610c6d60048036036060811015610c3757600080fd5b8101908080604001909192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ac0565b005b610cd160048036036040811015610c8557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d68565b604051808215151515815260200191505060405180910390f35b610d2d60048036036020811015610d0157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611dfc565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e2f5780601f10610e0457610100808354040283529160200191610e2f565b820191906000526020600020905b815481529060010190602001808311610e1257829003601f168201915b5050505050905090565b6000610e4482612115565b1515610eb8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f546f6b656e20646f65736e27742065786973740000000000000000000000000081525060200191505060405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610efe82611687565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610f87576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180613552602a913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610fc75750610fc68133611d68565b5b151561101e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604781526020018061357c6047913960600191505060405180910390fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061117857506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b15156111ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f43616c6c6572206973206e6f7420636f6e7472616374206f776e65720000000081525060200191505060405180910390fd5b6111f581611dfc565b50565b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806112a057506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1515611314576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f43616c6c6572206973206e6f7420636f6e7472616374206f776e65720000000081525060200191505060405180910390fd5b801515600060149054906101000a900460ff1615151415156113be5780600060146101000a81548160ff021916908315150217905550600060149054906101000a900460ff1615611390577f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e75260405160405180910390a16113bd565b7fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d1693360405160405180910390a15b5b50565b6000600880549050905090565b6113d83382612187565b15156113e357600080fd5b6113ee83838361221c565b505050565b611432828260006040519080825280601f01601f19166020018201604052801561142c5781602001600182028038833980820191505090505b506114ad565b5050565b6000611441836116c4565b8210151561144e57600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110151561149a57fe5b9060005260206000200154905092915050565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061155b57506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b15156115cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f43616c6c6572206973206e6f7420636f6e7472616374206f776e65720000000081525060200191505060405180910390fd5b7f4948c74cefbdbdaa88ab8f74e485b67c30a7e7c82f48677933ef4314c989ee6b611ae5600c604051808381526020018281526020019250505060405180910390a161161b8383612240565b61162482612261565b6001905092915050565b61164a838383602060405190810160405280600081525061192d565b505050565b60006116596113c1565b8210151561166657600080fd5b60088281548110151561167557fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061170d600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612397565b9050919050565b606060108054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117ac5780601f10611781576101008083540402835291602001916117ac565b820191906000526020600020905b81548152906001019060200180831161178f57829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156117f157600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b60008060149054906101000a900460ff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6119388484846113ce565b611944848484846123a5565b151561194f57600080fd5b50505050565b606061196082612115565b151561196b57600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a125780601f106119e757610100808354040283529160200191611a12565b820191906000526020600020905b8154815290600101906020018083116119f557829003601f168201915b50505050509050919050565b606060118054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ab65780601f10611a8b57610100808354040283529160200191611ab6565b820191906000526020600020905b815481529060010190602001808311611a9957829003601f168201915b5050505050905090565b6000826000600281101515611ad157fe5b6020020135836001600281101515611ae557fe5b602002013560405160200180838152602001828152602001925050506040516020818303038152906040528051906020012090506000601560008381526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515611bf9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f536f6c7574696f6e204e6f74204578697374000000000000000000000000000081525060200191505060405180910390fd5b8060000160009054906101000a900460ff16151515611c80576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f536f6c7574696f6e20576173205265676973746572656400000000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611d47576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f596f7520646964206e6f7420637265617465207468697320736f6c7574696f6e81525060200191505060405180910390fd5b611d558382600101546125c8565b611d628160010154612261565b50505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611ea457506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1515611f18576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f43616c6c6572206973206e6f7420636f6e7472616374206f776e65720000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611fbd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4e6577206f776e6572206d7573742062652061207265616c206164647265737381525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156121125760008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690507f39aa7b32e39346e4d63b7af2df2424277168303b5e5a6e01b6b1a014d501a7ab8183604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b50565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60008061219383611687565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061220257508373ffffffffffffffffffffffffffffffffffffffff166121ea84610e39565b73ffffffffffffffffffffffffffffffffffffffff16145b8061221357506122128185611d68565b5b91505092915050565b6122278383836127e4565b6122318382612a43565b61223b8282612be7565b505050565b61224a82826125c8565b6122548282612be7565b61225d81612cae565b5050565b61226a81612115565b15156122c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602781526020018061352b6027913960400191505060405180910390fd5b61236d60118054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561235a5780601f1061232f5761010080835404028352916020019161235a565b820191906000526020600020905b81548152906001019060200180831161233d57829003601f168201915b505050505061236883612d3e565b612e97565b601260008381526020019081526020016000209080519060200190612393929190613427565b5050565b600081600001549050919050565b60006123c68473ffffffffffffffffffffffffffffffffffffffff16612ede565b15156123d557600190506125c0565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156124cc5780820151818401526020810190506124b1565b50505050905090810190601f1680156124f95780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561251b57600080fd5b505af115801561252f573d6000803e3d6000fd5b505050506040513d602081101561254557600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561266d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f676976656e206164647265737320697320696e76616c6964000000000000000081525060200191505060405180910390fd5b61267681612115565b1515156126eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f746f6b656e496420616c7265616479206578697374730000000000000000000081525060200191505060405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612784600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612ef1565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b8273ffffffffffffffffffffffffffffffffffffffff1661280482611687565b73ffffffffffffffffffffffffffffffffffffffff16141515612872576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806135c3602c913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156128fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806134f96032913960400191505060405180910390fd5b61290381612f07565b61294a600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612fc7565b612991600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612ef1565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000612a9b6001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050612fea90919063ffffffff16565b90506000600760008481526020019081526020016000205490508181141515612b8e576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515612b0c57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515612b6657fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003612be091906134a7565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b7f4948c74cefbdbdaa88ab8f74e485b67c30a7e7c82f48677933ef4314c989ee6b81600880549050604051808381526020018281526020019250505060405180910390a16008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415612d86576040805190810160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612e92565b600082905060005b600082141515612db4578080600101915050600a82811515612dac57fe5b049150612d8e565b6060816040519080825280601f01601f191660200182016040528015612de95781602001600182028038833980820191505090505b50905060006001830390505b600086141515612e8a57600a86811515612e0b57fe5b066030017f010000000000000000000000000000000000000000000000000000000000000002828280600190039350815181101515612e4657fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a86811515612e8257fe5b049550612df5565b819450505050505b919050565b6060612ed6838360206040519081016040528060008152506020604051908101604052806000815250602060405190810160405280600081525061300c565b905092915050565b600080823b905060008111915050919050565b6001816000016000828254019250508190555050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515612fc45760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b612fdf60018260000154612fea90919063ffffffff16565b816000018190555050565b6000828211151515612ffb57600080fd5b600082840390508091505092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156130685781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b885181101561313257888181518110151561309657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156130f557fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061307f565b600090505b87518110156131ea57878181518110151561314e57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156131ad57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613137565b600090505b86518110156132a257868181518110151561320657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561326557fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506131ef565b600090505b855181101561335a5785818151811015156132be57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561331d57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506132a7565b600090505b845181101561341257848181518110151561337657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156133d557fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061335f565b82995050505050505050505095945050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061346857805160ff1916838001178555613496565b82800160010185558215613496579182015b8281111561349557825182559160200191906001019061347a565b5b5090506134a391906134d3565b5090565b8154818355818111156134ce578183600052602060002091820191016134cd91906134d3565b5b505050565b6134f591905b808211156134f15760008160009055506001016134d9565b5090565b9056fe7265717569726520746f6b656e206973206265696e67207472616e73666572656420746f2076616c69642061646472657373726571756972652074686520746f6b656e20657869737473206265666f72652073657474696e676164647265737320746f206e6f7420626520746865206f776e6572206f662074686520746f6b656e496473656e64657220746f20626520746865206f776e6572206f662074686520636f6e7472616374206f72206973417070726f766564466f72416c6c282920746f206265207472756566726f6d206164647265737320697320746865206f776e6572206f662074686520676976656e20746f6b656ea165627a7a723058204a905e88a9354aa45d44cc15646f81690280f14106f34a2851920650ab98ae7e0029",
  "sourceMap": "300:2262:6:-;;;418:214;8:9:-1;5:2;;;30:1;27;20:12;5:2;418:214:6;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;418:214:6;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;418:214:6;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;418:214:6;;;;;;549:4;555:6;23527:4:4;23545:6;21240:313;;;;;;;;;;;;;;;;;;860:29;878:10;860:17;;;:29;;;:::i;:::-;2185:5;2175:7;;:15;;;;;;;;;;;;;;;;;;3355:40;2952:10;3374:20;;3355:18;;;:40;;;:::i;:::-;5608;5483:10;5627:20;;5608:18;;;:40;;;:::i;:::-;13703:51;13309:10;13722:31;;13703:18;;;:51;;;:::i;:::-;21418:4;21410:5;:12;;;;;;;;;;;;:::i;:::-;;21442:6;21432:7;:16;;;;;;;;;;;;:::i;:::-;;21474:12;21458:13;:28;;;;;;;;;;;;:::i;:::-;;21497:49;21051:10;21516:29;;21497:18;;;:49;;;:::i;:::-;21240:313;;;23422:225;;609:15:6;581:16;;:44;;;;;;;;;;;;;;;;;;418:214;;;300:2262;;1149:466:4;972:3;954:22;;:6;;;;;;;;;;;:22;;;:46;;;;994:6;;;;;;;;;;;980:20;;:10;:20;;;954:46;933:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1387:3;1367:24;;:8;:24;;;;1359:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1452:8;1442:18;;:6;;;;;;;;;;;:18;;;;1438:171;;;1476:21;1500:6;;;;;;;;;;;1476:30;;1525:42;1543:13;1558:8;1525:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1590:8;1581:6;;:17;;;;;;;;;;;;;;;;;;1438:171;;1149:466;:::o;3733:158::-;3823:10;3808:25;;:11;:25;;;;;3800:34;;;;;;;;3880:4;3844:20;:33;3865:11;3844:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3733:158;:::o;300:2262:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "300:2262:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;300:2262:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3493:161:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3493:161:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;21640:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21640:83:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6961:225;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6961:225:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6192:763;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6192:763:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2780:99;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2780:99:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;2523:251;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2523:251:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;14496:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8191:210;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8191:210:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14801:122:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14801:122:5;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14801:122:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14801:122:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14801:122:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14801:122:5;;;;;;;;;;;;;;;:::i;:::-;;14134:210:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14134:210:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14929:166:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14929:166:5;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14929:166:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14929:166:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14929:166:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14929:166:5;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14929:166:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14929:166:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14929:166:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14929:166:5;;;;;;;;;;;;;;;:::i;:::-;;23653:251:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;23653:251:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8407:162;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8407:162:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14927:148;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14927:148:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5953:162;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5953:162:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5661:286;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5661:286:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;21729:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21729:87:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7478:213;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7478:213:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2439:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;799:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8575:249;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;8575:249:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8575:249:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8575:249:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8575:249:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8575:249:4;;;;;;;;;;;;;;;:::i;:::-;;21927:151;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;21927:151:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21927:151:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21822:99;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21822:99:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2073:487:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2073:487:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8012:173:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8012:173:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1149:466;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1149:466:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;3493:161;3587:4;3614:20;:33;3635:11;3614:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3607:40;;3493:161;;;:::o;21640:83::-;21679:13;21711:5;21704:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21640:83;:::o;6961:225::-;7020:7;7098:16;7106:7;7098;:16::i;:::-;7090:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7155:15;:24;7171:7;7155:24;;;;;;;;;;;;;;;;;;;;;7148:31;;6961:225;;;:::o;6192:763::-;6332:18;6353:16;6361:7;6353;:16::i;:::-;6332:37;;6401:2;6387:16;;:10;:16;;;;6379:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6601:10;6587:24;;:10;:24;;;6586:88;;;;6633:40;6650:10;6662;6633:16;:40::i;:::-;6586:88;6565:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6861:2;6834:15;:24;6850:7;6834:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;6940:7;6936:2;6915:33;;6924:10;6915:33;;;;;;;;;;;;6192:763;;;:::o;2780:99::-;972:3;954:22;;:6;;;;;;;;;;;:22;;;:46;;;;994:6;;;;;;;;;;;980:20;;:10;:20;;;954:46;933:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2845:27;2863:8;2845:17;:27::i;:::-;2780:99;:::o;2523:251::-;972:3;954:22;;:6;;;;;;;;;;;:22;;;:46;;;;994:6;;;;;;;;;;;980:20;;:10;:20;;;954:46;933:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2597:4;2586:15;;:7;;;;;;;;;;;:15;;;;2582:186;;;2627:4;2617:7;;:14;;;;;;;;;;;;;;;;;;2649:7;;;;;;;;;;;2645:113;;;2681:8;;;;;;;;;;2645:113;;;2733:10;;;;;;;;;;2645:113;2582:186;2523:251;:::o;14496:94::-;14540:7;14566:10;:17;;;;14559:24;;14496:94;:::o;8191:210::-;8311:39;8330:10;8342:7;8311:18;:39::i;:::-;8303:48;;;;;;;;8362:32;8376:4;8382:2;8386:7;8362:13;:32::i;:::-;8191:210;;;:::o;14801:122:5:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:5;;;;14876:10;:40::i;:::-;14801:122;;:::o;14134:210:4:-;14238:7;14277:16;14287:5;14277:9;:16::i;:::-;14269:5;:24;14261:33;;;;;;;;14311:12;:19;14324:5;14311:19;;;;;;;;;;;;;;;14331:5;14311:26;;;;;;;;;;;;;;;;;;14304:33;;14134:210;;;;:::o;14929:166:5:-;;;;:::o;23653:251:4:-;23752:16;972:3;954:22;;:6;;;;;;;;;;;:22;;;:46;;;;994:6;;;;;;;;;;;980:20;;:10;:20;;;954:46;933:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23785:22;23798:4;23804:2;23785:22;;;;;;;;;;;;;;;;;;;;;;;;23817:29;23834:2;23838:7;23817:16;:29::i;:::-;23856:20;23868:7;23856:11;:20::i;:::-;23893:4;23886:11;;23653:251;;;;:::o;8407:162::-;8523:39;8540:4;8546:2;8550:7;8523:39;;;;;;;;;;;;;:16;:39::i;:::-;8407:162;;;:::o;14927:148::-;14985:7;15020:13;:11;:13::i;:::-;15012:5;:21;15004:30;;;;;;;;15051:10;15062:5;15051:17;;;;;;;;;;;;;;;;;;15044:24;;14927:148;;;:::o;5953:162::-;6008:7;6088:11;:20;6100:7;6088:20;;;;;;;;;;;;;;;;;;;;;6081:27;;5953:162;;;:::o;5661:286::-;5716:7;5906:34;:17;:24;5924:5;5906:24;;;;;;;;;;;;;;;:32;:34::i;:::-;5899:41;;5661:286;;;:::o;21729:87::-;21770:13;21802:7;21795:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21729:87;:::o;7478:213::-;7563:10;7557:16;;:2;:16;;;;7549:25;;;;;;;;7621:8;7584:18;:30;7603:10;7584:30;;;;;;;;;;;;;;;:34;7615:2;7584:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;7671:2;7644:40;;7659:10;7644:40;;;7675:8;7644:40;;;;;;;;;;;;;;;;;;;;;;7478:213;;:::o;2439:78::-;2480:4;2503:7;;;;;;;;;;;2496:14;;2439:78;:::o;799:21::-;;;;;;;;;;;;;:::o;8575:249::-;8719:31;8732:4;8738:2;8742:7;8719:12;:31::i;:::-;8768:48;8791:4;8797:2;8801:7;8810:5;8768:22;:48::i;:::-;8760:57;;;;;;;;8575:249;;;;:::o;21927:151::-;21985:13;22018:16;22026:7;22018;:16::i;:::-;22010:25;;;;;;;;22052:10;:19;22063:7;22052:19;;;;;;;;;;;22045:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21927:151;;;:::o;21822:99::-;21869:13;21901;21894:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21822:99;:::o;2073:487:6:-;2152:19;2201:6;2208:1;2201:9;;;;;;;;;;;;;2212:6;2219:1;2212:9;;;;;;;;;;;;;2184:38;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2184:38:6;;;2174:49;;;;;;2152:71;;2234:20;2257:15;:28;2273:11;2257:28;;;;;;;;;;;2234:51;;2323:3;2303:24;;:3;:8;;;;;;;;;;;;:24;;;;2295:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2369:3;:16;;;;;;;;;;;;2368:17;2360:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2443:10;2431:22;;:3;:8;;;;;;;;;;;;:22;;;2423:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2501:23;2513:2;2517:3;:6;;;2501:11;:23::i;:::-;2534:19;2546:3;:6;;;2534:11;:19::i;:::-;2073:487;;;;:::o;8012:173:4:-;8116:4;8143:18;:25;8162:5;8143:25;;;;;;;;;;;;;;;:35;8169:8;8143:35;;;;;;;;;;;;;;;;;;;;;;;;;8136:42;;8012:173;;;;:::o;1149:466::-;972:3;954:22;;:6;;;;;;;;;;;:22;;;:46;;;;994:6;;;;;;;;;;;980:20;;:10;:20;;;954:46;933:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1387:3;1367:24;;:8;:24;;;;1359:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1452:8;1442:18;;:6;;;;;;;;;;;:18;;;;1438:171;;;1476:21;1500:6;;;;;;;;;;;1476:30;;1525:42;1543:13;1558:8;1525:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1590:8;1581:6;;:17;;;;;;;;;;;;;;;;;;1438:171;;1149:466;:::o;9018:152::-;9075:4;9091:13;9107:11;:20;9119:7;9107:20;;;;;;;;;;;;;;;;;;;;;9091:36;;9161:1;9144:19;;:5;:19;;;;9137:26;;;9018:152;;;:::o;9530:298::-;9639:4;9659:13;9675:16;9683:7;9675;:16::i;:::-;9659:32;;9720:5;9709:16;;:7;:16;;;:63;;;;9765:7;9741:31;;:20;9753:7;9741:11;:20::i;:::-;:31;;;9709:63;:111;;;;9788:32;9805:5;9812:7;9788:16;:32::i;:::-;9709:111;9701:120;;;9530:298;;;;:::o;15450:269::-;15565:38;15585:4;15591:2;15595:7;15565:19;:38::i;:::-;15614:47;15647:4;15653:7;15614:32;:47::i;:::-;15672:40;15700:2;15704:7;15672:27;:40::i;:::-;15450:269;;;:::o;15974:219::-;16051:24;16063:2;16067:7;16051:11;:24::i;:::-;16086:40;16114:2;16118:7;16086:27;:40::i;:::-;16137;16169:7;16137:31;:40::i;:::-;15974:219;;:::o;22551:207::-;22616:16;22624:7;22616;:16::i;:::-;22608:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22708:43;22718:13;22708:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22733:17;22742:7;22733:8;:17::i;:::-;22708:9;:43::i;:::-;22686:10;:19;22697:7;22686:19;;;;;;;;;;;:65;;;;;;;;;;;;:::i;:::-;;22551:207;:::o;1062:112:0:-;1127:7;1153;:14;;;1146:21;;1062:112;;;:::o;12070:431:4:-;12221:4;12242:15;:2;:13;;;:15::i;:::-;12241:16;12237:58;;;12280:4;12273:11;;;;12237:58;12305:13;12337:2;12321:36;;;12371:10;12395:4;12413:7;12434:5;12321:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12321:128:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12321:128:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12321:128:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12321:128:4;;;;;;;;;;;;;;;;12305:144;;4621:10;12477:16;;12467:26;;;:6;:26;;;;12459:35;;;12070:431;;;;;;;:::o;9985:514::-;10153:3;10139:18;;:2;:18;;;;10131:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10205:16;10213:7;10205;:16::i;:::-;10204:17;10196:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10360:2;10337:11;:20;10349:7;10337:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10372:33;:17;:21;10390:2;10372:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10484:7;10480:2;10457:35;;10474:3;10457:35;;;;;;;;;;;;9985:514;;:::o;10698:844::-;10924:4;10904:24;;:16;10912:7;10904;:16::i;:::-;:24;;;10883:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11112:3;11098:18;;:2;:18;;;;11077:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11235:23;11250:7;11235:14;:23::i;:::-;11343:35;:17;:23;11361:4;11343:23;;;;;;;;;;;;;;;:33;:35::i;:::-;11388:33;:17;:21;11406:2;11388:21;;;;;;;;;;;;;;;:31;:33::i;:::-;11454:2;11431:11;:20;11443:7;11431:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;11527:7;11523:2;11508:27;;11517:4;11508:27;;;;;;;;;;;;10698:844;;;:::o;18123:1140::-;18397:22;18422:32;18452:1;18422:12;:18;18435:4;18422:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;18397:57;;18464:18;18485:17;:26;18503:7;18485:26;;;;;;;;;;;;18464:47;;18629:14;18615:10;:28;;18611:323;;;18659:19;18681:12;:18;18694:4;18681:18;;;;;;;;;;;;;;;18700:14;18681:34;;;;;;;;;;;;;;;;;;18659:56;;18763:11;18730:12;:18;18743:4;18730:18;;;;;;;;;;;;;;;18749:10;18730:30;;;;;;;;;;;;;;;;;:44;;;;18879:10;18846:17;:30;18864:11;18846:30;;;;;;;;;;;:43;;;;18611:323;;19020:12;:18;19033:4;19020:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;18123:1140;;;;:::o;16843:183::-;16956:12;:16;16969:2;16956:16;;;;;;;;;;;;;;;:23;;;;16927:17;:26;16945:7;16927:26;;;;;;;;;;;:52;;;;16989:12;:16;17002:2;16989:16;;;;;;;;;;;;;;;17011:7;16989:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16989:30:4;;;;;;;;;;;;;;;;;;;;;;16843:183;;:::o;17221:225::-;17302:40;17315:7;17324:10;:17;;;;17302:40;;;;;;;;;;;;;;;;;;;;;;;;17379:10;:17;;;;17352:15;:24;17368:7;17352:24;;;;;;;;;;;:44;;;;17406:10;17422:7;17406:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;17406:24:4;;;;;;;;;;;;;;;;;;;;;;17221:225;:::o;43271:465:5:-;43321:27;43370:1;43364:2;:7;43360:48;;;43387:10;;;;;;;;;;;;;;;;;;;;;;43360:48;43417:6;43426:2;43417:11;;43438:8;43456:66;43468:1;43463;:6;;43456:66;;;43485:5;;;;;;;43509:2;43504:7;;;;;;;;;;;43456:66;;;43531:17;43561:3;43551:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43551:14:5;;;;43531:34;;43575:6;43590:1;43584:3;:7;43575:16;;43601:100;43614:1;43608:2;:7;;43601:100;;;43664:2;43659;:7;;;;;;;;43654:2;:12;43643:25;;43631:4;43636:3;;;;;;;43631:9;;;;;;;;;;;;;;:37;;;;;;;;;;;43688:2;43682:8;;;;;;;;;;;43601:100;;;43724:4;43710:19;;;;;;43271:465;;;;:::o;39712:166::-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;463:616:3:-;523:4;539:12;1038:7;1026:20;1018:28;;1071:1;1064:4;:8;1057:15;;;463:616;;;:::o;1180:89:0:-;1261:1;1243:7;:14;;;:19;;;;;;;;;;;1180:89;:::o;12582:171:4:-;12681:1;12645:38;;:15;:24;12661:7;12645:24;;;;;;;;;;;;;;;;;;;;;:38;;;;12641:106;;;12734:1;12699:15;:24;12715:7;12699:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;12641:106;12582:171;:::o;1275:108:0:-;1355:21;1374:1;1355:7;:14;;;:18;;:21;;;;:::i;:::-;1338:7;:14;;:38;;;;1275:108;:::o;1211:145:1:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;;;1313:9;1329:1;1325;:5;1313:17;;1348:1;1341:8;;;1211:145;;;;:::o;40282:1020:5:-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:5;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;300:2262:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.4.21 <0.6.0;\nimport \"./ERC721Mintable.sol\";\nimport \"./verifier.sol\";\n\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\n\ncontract SolnSquareVerifier is ERC721Mintable {\n    using Pairing for *;\n\n    Verifier private verifierContract;\n\n    constructor(\n        address verifierAddress,\n        string memory name,\n        string memory symbol\n    ) public ERC721Mintable(name, symbol) {        \n        verifierContract = Verifier(verifierAddress);\n    }\n\n    // TODO define a solutions struct that can hold an index & an address\n    struct Solution {\n        bool isRegistered;\n        uint256 id;\n        address from;\n    }\n\n    // TODO define an array of the above struct\n    Solution[] private solutions;\n\n    // TODO define a mapping to store unique solutions submitted\n    mapping(bytes32 => Solution) private uniqueSolutions;\n\n    // TODO Create an event to emit when a solution is added\n    event AddedSolution(address from);\n\n    // TODO Create a function to add the solutions to the array and emit the event\n    function addSolution(Verifier.Proof memory proof, uint256[2] memory inputs)\n        private\n    {\n        bytes32 hashedSolution = keccak256(\n            abi.encodePacked(inputs[0], inputs[1])\n        );\n        require(\n            !uniqueSolutions[hashedSolution].isRegistered,\n            \"Solution was added\"\n        );\n\n        require(\n            verifierContract.verifyTx(proof, inputs),\n            \"Solution was verified fail\"\n        );\n\n        Solution memory sol = Solution(true, solutions.length, msg.sender);\n        uniqueSolutions[hashedSolution] = sol;\n        solutions.push(sol);\n\n        emit AddedSolution(sol.from);\n    }\n\n    // TODO Create a function to mint new NFT only after the solution has been verified\n    //  - make sure the solution is unique (has not been used before)\n    //  - make sure you handle metadata as well as tokenSuplly\n    function mintNewNFT(uint256[2] calldata inputs, address to) external {\n        bytes32 hashedInput = keccak256(abi.encodePacked(inputs[0], inputs[1]));\n\n        Solution storage sol = uniqueSolutions[hashedInput];\n        require(sol.from != address(0x0), \"Solution Not Exist\");\n        require(!sol.isRegistered, \"Solution Was Registered\");\n        require(sol.from == msg.sender, \"You did not create this solution\");\n\n        super._mint(to, sol.id);\n        setTokenURI(sol.id);\n    }\n}\n",
  "sourcePath": "/Users/phuc.tran/Workplace/Udacity/BlockchainND/Udacity-BlockchainNanodegree-05-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7834
      ]
    },
    "id": 7835,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7649,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:6"
      },
      {
        "absolutePath": "project:/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7650,
        "nodeType": "ImportDirective",
        "scope": 7835,
        "sourceUnit": 1380,
        "src": "33:30:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/verifier.sol",
        "file": "./verifier.sol",
        "id": 7651,
        "nodeType": "ImportDirective",
        "scope": 7835,
        "sourceUnit": 8757,
        "src": "64:24:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7652,
              "name": "ERC721Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1379,
              "src": "331:14:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Mintable_$1379",
                "typeString": "contract ERC721Mintable"
              }
            },
            "id": 7653,
            "nodeType": "InheritanceSpecifier",
            "src": "331:14:6"
          }
        ],
        "contractDependencies": [
          289,
          1379,
          1333,
          913,
          1223,
          372,
          418,
          7647
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7834,
        "linearizedBaseContracts": [
          7834,
          1379,
          1333,
          7647,
          1223,
          913,
          418,
          372,
          289
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 7655,
            "libraryName": {
              "contractScope": null,
              "id": 7654,
              "name": "Pairing",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8409,
              "src": "358:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pairing_$8409",
                "typeString": "library Pairing"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "352:20:6",
            "typeName": null
          },
          {
            "constant": false,
            "id": 7657,
            "name": "verifierContract",
            "nodeType": "VariableDeclaration",
            "scope": 7834,
            "src": "378:33:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Verifier_$8756",
              "typeString": "contract Verifier"
            },
            "typeName": {
              "contractScope": null,
              "id": 7656,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8756,
              "src": "378:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$8756",
                "typeString": "contract Verifier"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 7676,
              "nodeType": "Block",
              "src": "563:69:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7670,
                      "name": "verifierContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7657,
                      "src": "581:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$8756",
                        "typeString": "contract Verifier"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7672,
                          "name": "verifierAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7659,
                          "src": "609:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7671,
                        "name": "Verifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8756,
                        "src": "600:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Verifier_$8756_$",
                          "typeString": "type(contract Verifier)"
                        }
                      },
                      "id": 7673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "600:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$8756",
                        "typeString": "contract Verifier"
                      }
                    },
                    "src": "581:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Verifier_$8756",
                      "typeString": "contract Verifier"
                    }
                  },
                  "id": 7675,
                  "nodeType": "ExpressionStatement",
                  "src": "581:44:6"
                }
              ]
            },
            "documentation": null,
            "id": 7677,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 7666,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7661,
                    "src": "549:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7667,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7663,
                    "src": "555:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 7668,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7665,
                  "name": "ERC721Mintable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1379,
                  "src": "534:14:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Mintable_$1379_$",
                    "typeString": "type(contract ERC721Mintable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "534:28:6"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7659,
                  "name": "verifierAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7677,
                  "src": "439:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7658,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "439:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7661,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 7677,
                  "src": "472:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7660,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "472:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7663,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 7677,
                  "src": "500:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7662,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "500:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "429:97:6"
            },
            "returnParameters": {
              "id": 7669,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "563:0:6"
            },
            "scope": 7834,
            "src": "418:214:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7684,
            "members": [
              {
                "constant": false,
                "id": 7679,
                "name": "isRegistered",
                "nodeType": "VariableDeclaration",
                "scope": 7684,
                "src": "738:17:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7678,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "738:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7681,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 7684,
                "src": "765:10:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7680,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "765:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7683,
                "name": "from",
                "nodeType": "VariableDeclaration",
                "scope": 7684,
                "src": "785:12:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7682,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "785:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7834,
            "src": "712:92:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7687,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7834,
            "src": "858:28:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Solution_$7684_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.Solution[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7685,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7684,
                "src": "858:8:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7684_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              },
              "id": 7686,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "858:10:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Solution_$7684_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.Solution[]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7691,
            "name": "uniqueSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 7834,
            "src": "958:52:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7684_storage_$",
              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7690,
              "keyType": {
                "id": 7688,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "966:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "958:28:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7684_storage_$",
                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7689,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7684,
                "src": "977:8:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7684_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7695,
            "name": "AddedSolution",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7693,
                  "indexed": false,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 7695,
                  "src": "1098:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7692,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1098:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1097:14:6"
            },
            "src": "1078:34:6"
          },
          {
            "body": {
              "id": 7763,
              "nodeType": "Block",
              "src": "1297:549:6",
              "statements": [
                {
                  "assignments": [
                    7705
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7705,
                      "name": "hashedSolution",
                      "nodeType": "VariableDeclaration",
                      "scope": 7763,
                      "src": "1307:22:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7704,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1307:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7717,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7709,
                              "name": "inputs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7701,
                              "src": "1372:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                "typeString": "uint256[2] memory"
                              }
                            },
                            "id": 7711,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 7710,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1379:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1372:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7712,
                              "name": "inputs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7701,
                              "src": "1383:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                "typeString": "uint256[2] memory"
                              }
                            },
                            "id": 7714,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 7713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1390:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1383:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7707,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8758,
                            "src": "1355:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1355:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1355:38:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7706,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8765,
                      "src": "1332:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1332:71:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1307:96:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1434:45:6",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7719,
                              "name": "uniqueSolutions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7691,
                              "src": "1435:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7684_storage_$",
                                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7721,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7720,
                              "name": "hashedSolution",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7705,
                              "src": "1451:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1435:31:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7684_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7722,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isRegistered",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7679,
                          "src": "1435:44:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e20776173206164646564",
                        "id": 7724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1493:20:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3375517311693ea9753999abc5fa081f940ac86bd9b4c9355cb52262c0ece583",
                          "typeString": "literal_string \"Solution was added\""
                        },
                        "value": "Solution was added"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3375517311693ea9753999abc5fa081f940ac86bd9b4c9355cb52262c0ece583",
                          "typeString": "literal_string \"Solution was added\""
                        }
                      ],
                      "id": 7718,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8774,
                        8775
                      ],
                      "referencedDeclaration": 8775,
                      "src": "1413:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1413:110:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7726,
                  "nodeType": "ExpressionStatement",
                  "src": "1413:110:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7730,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7697,
                            "src": "1581:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proof_$8430_memory_ptr",
                              "typeString": "struct Verifier.Proof memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7731,
                            "name": "inputs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7701,
                            "src": "1588:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Proof_$8430_memory_ptr",
                              "typeString": "struct Verifier.Proof memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7728,
                            "name": "verifierContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7657,
                            "src": "1555:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Verifier_$8756",
                              "typeString": "contract Verifier"
                            }
                          },
                          "id": 7729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verifyTx",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8755,
                          "src": "1555:25:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_Proof_$8430_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct Verifier.Proof memory,uint256[2] memory) view external returns (bool)"
                          }
                        },
                        "id": 7732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1555:40:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e20776173207665726966696564206661696c",
                        "id": 7733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1609:28:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3266cac587abaa5073b5e6b82de05d86616d0fe19e8161ffc85685bba9078f63",
                          "typeString": "literal_string \"Solution was verified fail\""
                        },
                        "value": "Solution was verified fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3266cac587abaa5073b5e6b82de05d86616d0fe19e8161ffc85685bba9078f63",
                          "typeString": "literal_string \"Solution was verified fail\""
                        }
                      ],
                      "id": 7727,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8774,
                        8775
                      ],
                      "referencedDeclaration": 8775,
                      "src": "1534:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1534:113:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7735,
                  "nodeType": "ExpressionStatement",
                  "src": "1534:113:6"
                },
                {
                  "assignments": [
                    7737
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7737,
                      "name": "sol",
                      "nodeType": "VariableDeclaration",
                      "scope": 7763,
                      "src": "1658:19:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7684_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7736,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7684,
                        "src": "1658:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7684_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7745,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 7739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1689:4:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7740,
                          "name": "solutions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7687,
                          "src": "1695:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Solution_$7684_storage_$dyn_storage",
                            "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                          }
                        },
                        "id": 7741,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1695:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7742,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8771,
                          "src": "1713:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1713:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 7738,
                      "name": "Solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7684,
                      "src": "1680:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Solution_$7684_storage_ptr_$",
                        "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                      }
                    },
                    "id": 7744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1680:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7684_memory",
                      "typeString": "struct SolnSquareVerifier.Solution memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1658:66:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7746,
                        "name": "uniqueSolutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7691,
                        "src": "1734:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7684_storage_$",
                          "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7748,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7747,
                        "name": "hashedSolution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7705,
                        "src": "1750:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1734:31:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7684_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7749,
                      "name": "sol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7737,
                      "src": "1768:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7684_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "1734:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7684_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7751,
                  "nodeType": "ExpressionStatement",
                  "src": "1734:37:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7755,
                        "name": "sol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7737,
                        "src": "1796:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7684_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Solution_$7684_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7752,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7687,
                        "src": "1781:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solution_$7684_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                        }
                      },
                      "id": 7754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1781:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Solution_$7684_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                      }
                    },
                    "id": 7756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1781:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7757,
                  "nodeType": "ExpressionStatement",
                  "src": "1781:19:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7759,
                          "name": "sol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7737,
                          "src": "1830:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Solution_$7684_memory_ptr",
                            "typeString": "struct SolnSquareVerifier.Solution memory"
                          }
                        },
                        "id": 7760,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "from",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7683,
                        "src": "1830:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7758,
                      "name": "AddedSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7695,
                      "src": "1816:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1816:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7762,
                  "nodeType": "EmitStatement",
                  "src": "1811:28:6"
                }
              ]
            },
            "documentation": null,
            "id": 7764,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7697,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 7764,
                  "src": "1222:27:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$8430_memory_ptr",
                    "typeString": "struct Verifier.Proof"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7696,
                    "name": "Verifier.Proof",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8430,
                    "src": "1222:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$8430_storage_ptr",
                      "typeString": "struct Verifier.Proof"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7701,
                  "name": "inputs",
                  "nodeType": "VariableDeclaration",
                  "scope": 7764,
                  "src": "1251:24:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7698,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1251:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7700,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1259:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1251:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1221:55:6"
            },
            "returnParameters": {
              "id": 7703,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1297:0:6"
            },
            "scope": 7834,
            "src": "1201:645:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 7832,
              "nodeType": "Block",
              "src": "2142:418:6",
              "statements": [
                {
                  "assignments": [
                    7774
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7774,
                      "name": "hashedInput",
                      "nodeType": "VariableDeclaration",
                      "scope": 7832,
                      "src": "2152:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7773,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2152:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7786,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7778,
                              "name": "inputs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7768,
                              "src": "2201:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                                "typeString": "uint256[2] calldata"
                              }
                            },
                            "id": 7780,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 7779,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2208:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2201:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7781,
                              "name": "inputs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7768,
                              "src": "2212:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                                "typeString": "uint256[2] calldata"
                              }
                            },
                            "id": 7783,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 7782,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2219:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2212:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7776,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8758,
                            "src": "2184:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2184:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2184:38:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7775,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8765,
                      "src": "2174:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2174:49:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2152:71:6"
                },
                {
                  "assignments": [
                    7788
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7788,
                      "name": "sol",
                      "nodeType": "VariableDeclaration",
                      "scope": 7832,
                      "src": "2234:20:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7684_storage_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7787,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7684,
                        "src": "2234:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7684_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7792,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 7789,
                      "name": "uniqueSolutions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7691,
                      "src": "2257:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7684_storage_$",
                        "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                      }
                    },
                    "id": 7791,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 7790,
                      "name": "hashedInput",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7774,
                      "src": "2273:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2257:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7684_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2234:51:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7794,
                            "name": "sol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7788,
                            "src": "2303:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7684_storage_ptr",
                              "typeString": "struct SolnSquareVerifier.Solution storage pointer"
                            }
                          },
                          "id": 7795,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "from",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7683,
                          "src": "2303:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830",
                              "id": 7797,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2323:3:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7796,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2315:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 7798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2315:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2303:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e204e6f74204578697374",
                        "id": 7800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2329:20:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_46042db2ac726d9a89755cb100442f32f1d606f7d6772e1be8a3f85272bbf08b",
                          "typeString": "literal_string \"Solution Not Exist\""
                        },
                        "value": "Solution Not Exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_46042db2ac726d9a89755cb100442f32f1d606f7d6772e1be8a3f85272bbf08b",
                          "typeString": "literal_string \"Solution Not Exist\""
                        }
                      ],
                      "id": 7793,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8774,
                        8775
                      ],
                      "referencedDeclaration": 8775,
                      "src": "2295:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2295:55:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7802,
                  "nodeType": "ExpressionStatement",
                  "src": "2295:55:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2368:17:6",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7804,
                            "name": "sol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7788,
                            "src": "2369:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7684_storage_ptr",
                              "typeString": "struct SolnSquareVerifier.Solution storage pointer"
                            }
                          },
                          "id": 7805,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isRegistered",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7679,
                          "src": "2369:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e205761732052656769737465726564",
                        "id": 7807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2387:25:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f43e624d631247dcc0105263272764faddc9296437e3746931a18d1d2af1c15",
                          "typeString": "literal_string \"Solution Was Registered\""
                        },
                        "value": "Solution Was Registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f43e624d631247dcc0105263272764faddc9296437e3746931a18d1d2af1c15",
                          "typeString": "literal_string \"Solution Was Registered\""
                        }
                      ],
                      "id": 7803,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8774,
                        8775
                      ],
                      "referencedDeclaration": 8775,
                      "src": "2360:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2360:53:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7809,
                  "nodeType": "ExpressionStatement",
                  "src": "2360:53:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7811,
                            "name": "sol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7788,
                            "src": "2431:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7684_storage_ptr",
                              "typeString": "struct SolnSquareVerifier.Solution storage pointer"
                            }
                          },
                          "id": 7812,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "from",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7683,
                          "src": "2431:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7813,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8771,
                            "src": "2443:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2443:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2431:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f7520646964206e6f7420637265617465207468697320736f6c7574696f6e",
                        "id": 7816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2455:34:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c54f723a55acd491f90e1ffd2ee0dfe57e7b0749c089cc83a8373ef7eac21dca",
                          "typeString": "literal_string \"You did not create this solution\""
                        },
                        "value": "You did not create this solution"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c54f723a55acd491f90e1ffd2ee0dfe57e7b0749c089cc83a8373ef7eac21dca",
                          "typeString": "literal_string \"You did not create this solution\""
                        }
                      ],
                      "id": 7810,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8774,
                        8775
                      ],
                      "referencedDeclaration": 8775,
                      "src": "2423:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2423:67:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7818,
                  "nodeType": "ExpressionStatement",
                  "src": "2423:67:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7822,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7770,
                        "src": "2513:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7823,
                          "name": "sol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7788,
                          "src": "2517:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Solution_$7684_storage_ptr",
                            "typeString": "struct SolnSquareVerifier.Solution storage pointer"
                          }
                        },
                        "id": 7824,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7681,
                        "src": "2517:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7819,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8823,
                        "src": "2501:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SolnSquareVerifier_$7834",
                          "typeString": "contract super SolnSquareVerifier"
                        }
                      },
                      "id": 7821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 793,
                      "src": "2501:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2501:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7826,
                  "nodeType": "ExpressionStatement",
                  "src": "2501:23:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7828,
                          "name": "sol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7788,
                          "src": "2546:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Solution_$7684_storage_ptr",
                            "typeString": "struct SolnSquareVerifier.Solution storage pointer"
                          }
                        },
                        "id": 7829,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7681,
                        "src": "2546:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7827,
                      "name": "setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1332,
                      "src": "2534:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 7830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2534:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7831,
                  "nodeType": "ExpressionStatement",
                  "src": "2534:19:6"
                }
              ]
            },
            "documentation": null,
            "id": 7833,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintNewNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7768,
                  "name": "inputs",
                  "nodeType": "VariableDeclaration",
                  "scope": 7833,
                  "src": "2093:26:6",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7765,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2093:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7767,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2101:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2093:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7770,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7833,
                  "src": "2121:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7769,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2121:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2092:40:6"
            },
            "returnParameters": {
              "id": 7772,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2142:0:6"
            },
            "scope": 7834,
            "src": "2073:487:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 7835,
        "src": "300:2262:6"
      }
    ],
    "src": "0:2563:6"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
      "exportedSymbols": {
        "SolnSquareVerifier": [
          7834
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 7649,
        "name": "PragmaDirective",
        "src": "0:32:6"
      },
      {
        "attributes": {
          "SourceUnit": 1380,
          "absolutePath": "project:/contracts/ERC721Mintable.sol",
          "file": "./ERC721Mintable.sol",
          "scope": 7835,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7650,
        "name": "ImportDirective",
        "src": "33:30:6"
      },
      {
        "attributes": {
          "SourceUnit": 8757,
          "absolutePath": "project:/contracts/verifier.sol",
          "file": "./verifier.sol",
          "scope": 7835,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7651,
        "name": "ImportDirective",
        "src": "64:24:6"
      },
      {
        "attributes": {
          "contractDependencies": [
            289,
            1379,
            1333,
            913,
            1223,
            372,
            418,
            7647
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7834,
            1379,
            1333,
            7647,
            1223,
            913,
            418,
            372,
            289
          ],
          "name": "SolnSquareVerifier",
          "scope": 7835
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721Mintable",
                  "referencedDeclaration": 1379,
                  "type": "contract ERC721Mintable"
                },
                "id": 7652,
                "name": "UserDefinedTypeName",
                "src": "331:14:6"
              }
            ],
            "id": 7653,
            "name": "InheritanceSpecifier",
            "src": "331:14:6"
          },
          {
            "attributes": {
              "typeName": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Pairing",
                  "referencedDeclaration": 8409,
                  "type": "library Pairing"
                },
                "id": 7654,
                "name": "UserDefinedTypeName",
                "src": "358:7:6"
              }
            ],
            "id": 7655,
            "name": "UsingForDirective",
            "src": "352:20:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "verifierContract",
              "scope": 7834,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract Verifier",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Verifier",
                  "referencedDeclaration": 8756,
                  "type": "contract Verifier"
                },
                "id": 7656,
                "name": "UserDefinedTypeName",
                "src": "378:8:6"
              }
            ],
            "id": 7657,
            "name": "VariableDeclaration",
            "src": "378:33:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 7834,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "verifierAddress",
                      "scope": 7677,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7658,
                        "name": "ElementaryTypeName",
                        "src": "439:7:6"
                      }
                    ],
                    "id": 7659,
                    "name": "VariableDeclaration",
                    "src": "439:23:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "name",
                      "scope": 7677,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 7660,
                        "name": "ElementaryTypeName",
                        "src": "472:6:6"
                      }
                    ],
                    "id": 7661,
                    "name": "VariableDeclaration",
                    "src": "472:18:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "symbol",
                      "scope": 7677,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 7662,
                        "name": "ElementaryTypeName",
                        "src": "500:6:6"
                      }
                    ],
                    "id": 7663,
                    "name": "VariableDeclaration",
                    "src": "500:20:6"
                  }
                ],
                "id": 7664,
                "name": "ParameterList",
                "src": "429:97:6"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7669,
                "name": "ParameterList",
                "src": "563:0:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1379,
                      "type": "type(contract ERC721Mintable)",
                      "value": "ERC721Mintable"
                    },
                    "id": 7665,
                    "name": "Identifier",
                    "src": "534:14:6"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7661,
                      "type": "string memory",
                      "value": "name"
                    },
                    "id": 7666,
                    "name": "Identifier",
                    "src": "549:4:6"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7663,
                      "type": "string memory",
                      "value": "symbol"
                    },
                    "id": 7667,
                    "name": "Identifier",
                    "src": "555:6:6"
                  }
                ],
                "id": 7668,
                "name": "ModifierInvocation",
                "src": "534:28:6"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract Verifier"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7657,
                              "type": "contract Verifier",
                              "value": "verifierContract"
                            },
                            "id": 7670,
                            "name": "Identifier",
                            "src": "581:16:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "contract Verifier",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 8756,
                                  "type": "type(contract Verifier)",
                                  "value": "Verifier"
                                },
                                "id": 7671,
                                "name": "Identifier",
                                "src": "600:8:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7659,
                                  "type": "address",
                                  "value": "verifierAddress"
                                },
                                "id": 7672,
                                "name": "Identifier",
                                "src": "609:15:6"
                              }
                            ],
                            "id": 7673,
                            "name": "FunctionCall",
                            "src": "600:25:6"
                          }
                        ],
                        "id": 7674,
                        "name": "Assignment",
                        "src": "581:44:6"
                      }
                    ],
                    "id": 7675,
                    "name": "ExpressionStatement",
                    "src": "581:44:6"
                  }
                ],
                "id": 7676,
                "name": "Block",
                "src": "563:69:6"
              }
            ],
            "id": 7677,
            "name": "FunctionDefinition",
            "src": "418:214:6"
          },
          {
            "attributes": {
              "canonicalName": "SolnSquareVerifier.Solution",
              "name": "Solution",
              "scope": 7834,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "isRegistered",
                  "scope": 7684,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 7678,
                    "name": "ElementaryTypeName",
                    "src": "738:4:6"
                  }
                ],
                "id": 7679,
                "name": "VariableDeclaration",
                "src": "738:17:6"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "id",
                  "scope": 7684,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 7680,
                    "name": "ElementaryTypeName",
                    "src": "765:7:6"
                  }
                ],
                "id": 7681,
                "name": "VariableDeclaration",
                "src": "765:10:6"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "from",
                  "scope": 7684,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 7682,
                    "name": "ElementaryTypeName",
                    "src": "785:7:6"
                  }
                ],
                "id": 7683,
                "name": "VariableDeclaration",
                "src": "785:12:6"
              }
            ],
            "id": 7684,
            "name": "StructDefinition",
            "src": "712:92:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "solutions",
              "scope": 7834,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct SolnSquareVerifier.Solution[]",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "struct SolnSquareVerifier.Solution[]"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7684,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7685,
                    "name": "UserDefinedTypeName",
                    "src": "858:8:6"
                  }
                ],
                "id": 7686,
                "name": "ArrayTypeName",
                "src": "858:10:6"
              }
            ],
            "id": 7687,
            "name": "VariableDeclaration",
            "src": "858:28:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "uniqueSolutions",
              "scope": 7834,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution)",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 7688,
                    "name": "ElementaryTypeName",
                    "src": "966:7:6"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7684,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7689,
                    "name": "UserDefinedTypeName",
                    "src": "977:8:6"
                  }
                ],
                "id": 7690,
                "name": "Mapping",
                "src": "958:28:6"
              }
            ],
            "id": 7691,
            "name": "VariableDeclaration",
            "src": "958:52:6"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "AddedSolution"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "from",
                      "scope": 7695,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7692,
                        "name": "ElementaryTypeName",
                        "src": "1098:7:6"
                      }
                    ],
                    "id": 7693,
                    "name": "VariableDeclaration",
                    "src": "1098:12:6"
                  }
                ],
                "id": 7694,
                "name": "ParameterList",
                "src": "1097:14:6"
              }
            ],
            "id": 7695,
            "name": "EventDefinition",
            "src": "1078:34:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addSolution",
              "scope": 7834,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "private"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "proof",
                      "scope": 7764,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Verifier.Proof",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Verifier.Proof",
                          "referencedDeclaration": 8430,
                          "type": "struct Verifier.Proof"
                        },
                        "id": 7696,
                        "name": "UserDefinedTypeName",
                        "src": "1222:14:6"
                      }
                    ],
                    "id": 7697,
                    "name": "VariableDeclaration",
                    "src": "1222:27:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "inputs",
                      "scope": 7764,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 7698,
                            "name": "ElementaryTypeName",
                            "src": "1251:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": null,
                              "value": "2"
                            },
                            "id": 7699,
                            "name": "Literal",
                            "src": "1259:1:6"
                          }
                        ],
                        "id": 7700,
                        "name": "ArrayTypeName",
                        "src": "1251:10:6"
                      }
                    ],
                    "id": 7701,
                    "name": "VariableDeclaration",
                    "src": "1251:24:6"
                  }
                ],
                "id": 7702,
                "name": "ParameterList",
                "src": "1221:55:6"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7703,
                "name": "ParameterList",
                "src": "1297:0:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        7705
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "hashedSolution",
                          "scope": 7763,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes32",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 7704,
                            "name": "ElementaryTypeName",
                            "src": "1307:7:6"
                          }
                        ],
                        "id": 7705,
                        "name": "VariableDeclaration",
                        "src": "1307:22:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 8765,
                              "type": "function (bytes memory) pure returns (bytes32)",
                              "value": "keccak256"
                            },
                            "id": 7706,
                            "name": "Identifier",
                            "src": "1332:9:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "encodePacked",
                                  "referencedDeclaration": null,
                                  "type": "function () pure returns (bytes memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 8758,
                                      "type": "abi",
                                      "value": "abi"
                                    },
                                    "id": 7707,
                                    "name": "Identifier",
                                    "src": "1355:3:6"
                                  }
                                ],
                                "id": 7708,
                                "name": "MemberAccess",
                                "src": "1355:16:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7701,
                                      "type": "uint256[2] memory",
                                      "value": "inputs"
                                    },
                                    "id": 7709,
                                    "name": "Identifier",
                                    "src": "1372:6:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 7710,
                                    "name": "Literal",
                                    "src": "1379:1:6"
                                  }
                                ],
                                "id": 7711,
                                "name": "IndexAccess",
                                "src": "1372:9:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7701,
                                      "type": "uint256[2] memory",
                                      "value": "inputs"
                                    },
                                    "id": 7712,
                                    "name": "Identifier",
                                    "src": "1383:6:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "31",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 1",
                                      "value": "1"
                                    },
                                    "id": 7713,
                                    "name": "Literal",
                                    "src": "1390:1:6"
                                  }
                                ],
                                "id": 7714,
                                "name": "IndexAccess",
                                "src": "1383:9:6"
                              }
                            ],
                            "id": 7715,
                            "name": "FunctionCall",
                            "src": "1355:38:6"
                          }
                        ],
                        "id": 7716,
                        "name": "FunctionCall",
                        "src": "1332:71:6"
                      }
                    ],
                    "id": 7717,
                    "name": "VariableDeclarationStatement",
                    "src": "1307:96:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_3375517311693ea9753999abc5fa081f940ac86bd9b4c9355cb52262c0ece583",
                                  "typeString": "literal_string \"Solution was added\""
                                }
                              ],
                              "overloadedDeclarations": [
                                8774,
                                8775
                              ],
                              "referencedDeclaration": 8775,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7718,
                            "name": "Identifier",
                            "src": "1413:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "isRegistered",
                                  "referencedDeclaration": 7679,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SolnSquareVerifier.Solution storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7691,
                                          "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
                                          "value": "uniqueSolutions"
                                        },
                                        "id": 7719,
                                        "name": "Identifier",
                                        "src": "1435:15:6"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7705,
                                          "type": "bytes32",
                                          "value": "hashedSolution"
                                        },
                                        "id": 7720,
                                        "name": "Identifier",
                                        "src": "1451:14:6"
                                      }
                                    ],
                                    "id": 7721,
                                    "name": "IndexAccess",
                                    "src": "1435:31:6"
                                  }
                                ],
                                "id": 7722,
                                "name": "MemberAccess",
                                "src": "1435:44:6"
                              }
                            ],
                            "id": 7723,
                            "name": "UnaryOperation",
                            "src": "1434:45:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "536f6c7574696f6e20776173206164646564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Solution was added\"",
                              "value": "Solution was added"
                            },
                            "id": 7724,
                            "name": "Literal",
                            "src": "1493:20:6"
                          }
                        ],
                        "id": 7725,
                        "name": "FunctionCall",
                        "src": "1413:110:6"
                      }
                    ],
                    "id": 7726,
                    "name": "ExpressionStatement",
                    "src": "1413:110:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_3266cac587abaa5073b5e6b82de05d86616d0fe19e8161ffc85685bba9078f63",
                                  "typeString": "literal_string \"Solution was verified fail\""
                                }
                              ],
                              "overloadedDeclarations": [
                                8774,
                                8775
                              ],
                              "referencedDeclaration": 8775,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7727,
                            "name": "Identifier",
                            "src": "1534:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Proof_$8430_memory_ptr",
                                      "typeString": "struct Verifier.Proof memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "verifyTx",
                                  "referencedDeclaration": 8755,
                                  "type": "function (struct Verifier.Proof memory,uint256[2] memory) view external returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7657,
                                      "type": "contract Verifier",
                                      "value": "verifierContract"
                                    },
                                    "id": 7728,
                                    "name": "Identifier",
                                    "src": "1555:16:6"
                                  }
                                ],
                                "id": 7729,
                                "name": "MemberAccess",
                                "src": "1555:25:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7697,
                                  "type": "struct Verifier.Proof memory",
                                  "value": "proof"
                                },
                                "id": 7730,
                                "name": "Identifier",
                                "src": "1581:5:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7701,
                                  "type": "uint256[2] memory",
                                  "value": "inputs"
                                },
                                "id": 7731,
                                "name": "Identifier",
                                "src": "1588:6:6"
                              }
                            ],
                            "id": 7732,
                            "name": "FunctionCall",
                            "src": "1555:40:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "536f6c7574696f6e20776173207665726966696564206661696c",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Solution was verified fail\"",
                              "value": "Solution was verified fail"
                            },
                            "id": 7733,
                            "name": "Literal",
                            "src": "1609:28:6"
                          }
                        ],
                        "id": 7734,
                        "name": "FunctionCall",
                        "src": "1534:113:6"
                      }
                    ],
                    "id": 7735,
                    "name": "ExpressionStatement",
                    "src": "1534:113:6"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        7737
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "sol",
                          "scope": 7763,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct SolnSquareVerifier.Solution",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Solution",
                              "referencedDeclaration": 7684,
                              "type": "struct SolnSquareVerifier.Solution"
                            },
                            "id": 7736,
                            "name": "UserDefinedTypeName",
                            "src": "1658:8:6"
                          }
                        ],
                        "id": 7737,
                        "name": "VariableDeclaration",
                        "src": "1658:19:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "struct SolnSquareVerifier.Solution memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7684,
                              "type": "type(struct SolnSquareVerifier.Solution storage pointer)",
                              "value": "Solution"
                            },
                            "id": 7738,
                            "name": "Identifier",
                            "src": "1680:8:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 7739,
                            "name": "Literal",
                            "src": "1689:4:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7687,
                                  "type": "struct SolnSquareVerifier.Solution storage ref[] storage ref",
                                  "value": "solutions"
                                },
                                "id": 7740,
                                "name": "Identifier",
                                "src": "1695:9:6"
                              }
                            ],
                            "id": 7741,
                            "name": "MemberAccess",
                            "src": "1695:16:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 8771,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 7742,
                                "name": "Identifier",
                                "src": "1713:3:6"
                              }
                            ],
                            "id": 7743,
                            "name": "MemberAccess",
                            "src": "1713:10:6"
                          }
                        ],
                        "id": 7744,
                        "name": "FunctionCall",
                        "src": "1680:44:6"
                      }
                    ],
                    "id": 7745,
                    "name": "VariableDeclarationStatement",
                    "src": "1658:66:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct SolnSquareVerifier.Solution storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct SolnSquareVerifier.Solution storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7691,
                                  "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
                                  "value": "uniqueSolutions"
                                },
                                "id": 7746,
                                "name": "Identifier",
                                "src": "1734:15:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7705,
                                  "type": "bytes32",
                                  "value": "hashedSolution"
                                },
                                "id": 7747,
                                "name": "Identifier",
                                "src": "1750:14:6"
                              }
                            ],
                            "id": 7748,
                            "name": "IndexAccess",
                            "src": "1734:31:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7737,
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "value": "sol"
                            },
                            "id": 7749,
                            "name": "Identifier",
                            "src": "1768:3:6"
                          }
                        ],
                        "id": 7750,
                        "name": "Assignment",
                        "src": "1734:37:6"
                      }
                    ],
                    "id": 7751,
                    "name": "ExpressionStatement",
                    "src": "1734:37:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Solution_$7684_memory_ptr",
                                  "typeString": "struct SolnSquareVerifier.Solution memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7687,
                                  "type": "struct SolnSquareVerifier.Solution storage ref[] storage ref",
                                  "value": "solutions"
                                },
                                "id": 7752,
                                "name": "Identifier",
                                "src": "1781:9:6"
                              }
                            ],
                            "id": 7754,
                            "name": "MemberAccess",
                            "src": "1781:14:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7737,
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "value": "sol"
                            },
                            "id": 7755,
                            "name": "Identifier",
                            "src": "1796:3:6"
                          }
                        ],
                        "id": 7756,
                        "name": "FunctionCall",
                        "src": "1781:19:6"
                      }
                    ],
                    "id": 7757,
                    "name": "ExpressionStatement",
                    "src": "1781:19:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7695,
                              "type": "function (address)",
                              "value": "AddedSolution"
                            },
                            "id": 7758,
                            "name": "Identifier",
                            "src": "1816:13:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "from",
                              "referencedDeclaration": 7683,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7737,
                                  "type": "struct SolnSquareVerifier.Solution memory",
                                  "value": "sol"
                                },
                                "id": 7759,
                                "name": "Identifier",
                                "src": "1830:3:6"
                              }
                            ],
                            "id": 7760,
                            "name": "MemberAccess",
                            "src": "1830:8:6"
                          }
                        ],
                        "id": 7761,
                        "name": "FunctionCall",
                        "src": "1816:23:6"
                      }
                    ],
                    "id": 7762,
                    "name": "EmitStatement",
                    "src": "1811:28:6"
                  }
                ],
                "id": 7763,
                "name": "Block",
                "src": "1297:549:6"
              }
            ],
            "id": 7764,
            "name": "FunctionDefinition",
            "src": "1201:645:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mintNewNFT",
              "scope": 7834,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "inputs",
                      "scope": 7833,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 7765,
                            "name": "ElementaryTypeName",
                            "src": "2093:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": null,
                              "value": "2"
                            },
                            "id": 7766,
                            "name": "Literal",
                            "src": "2101:1:6"
                          }
                        ],
                        "id": 7767,
                        "name": "ArrayTypeName",
                        "src": "2093:10:6"
                      }
                    ],
                    "id": 7768,
                    "name": "VariableDeclaration",
                    "src": "2093:26:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "to",
                      "scope": 7833,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7769,
                        "name": "ElementaryTypeName",
                        "src": "2121:7:6"
                      }
                    ],
                    "id": 7770,
                    "name": "VariableDeclaration",
                    "src": "2121:10:6"
                  }
                ],
                "id": 7771,
                "name": "ParameterList",
                "src": "2092:40:6"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7772,
                "name": "ParameterList",
                "src": "2142:0:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        7774
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "hashedInput",
                          "scope": 7832,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes32",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 7773,
                            "name": "ElementaryTypeName",
                            "src": "2152:7:6"
                          }
                        ],
                        "id": 7774,
                        "name": "VariableDeclaration",
                        "src": "2152:19:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 8765,
                              "type": "function (bytes memory) pure returns (bytes32)",
                              "value": "keccak256"
                            },
                            "id": 7775,
                            "name": "Identifier",
                            "src": "2174:9:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "encodePacked",
                                  "referencedDeclaration": null,
                                  "type": "function () pure returns (bytes memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 8758,
                                      "type": "abi",
                                      "value": "abi"
                                    },
                                    "id": 7776,
                                    "name": "Identifier",
                                    "src": "2184:3:6"
                                  }
                                ],
                                "id": 7777,
                                "name": "MemberAccess",
                                "src": "2184:16:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7768,
                                      "type": "uint256[2] calldata",
                                      "value": "inputs"
                                    },
                                    "id": 7778,
                                    "name": "Identifier",
                                    "src": "2201:6:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 7779,
                                    "name": "Literal",
                                    "src": "2208:1:6"
                                  }
                                ],
                                "id": 7780,
                                "name": "IndexAccess",
                                "src": "2201:9:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7768,
                                      "type": "uint256[2] calldata",
                                      "value": "inputs"
                                    },
                                    "id": 7781,
                                    "name": "Identifier",
                                    "src": "2212:6:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "31",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 1",
                                      "value": "1"
                                    },
                                    "id": 7782,
                                    "name": "Literal",
                                    "src": "2219:1:6"
                                  }
                                ],
                                "id": 7783,
                                "name": "IndexAccess",
                                "src": "2212:9:6"
                              }
                            ],
                            "id": 7784,
                            "name": "FunctionCall",
                            "src": "2184:38:6"
                          }
                        ],
                        "id": 7785,
                        "name": "FunctionCall",
                        "src": "2174:49:6"
                      }
                    ],
                    "id": 7786,
                    "name": "VariableDeclarationStatement",
                    "src": "2152:71:6"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        7788
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "sol",
                          "scope": 7832,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct SolnSquareVerifier.Solution",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Solution",
                              "referencedDeclaration": 7684,
                              "type": "struct SolnSquareVerifier.Solution"
                            },
                            "id": 7787,
                            "name": "UserDefinedTypeName",
                            "src": "2234:8:6"
                          }
                        ],
                        "id": 7788,
                        "name": "VariableDeclaration",
                        "src": "2234:20:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct SolnSquareVerifier.Solution storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7691,
                              "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
                              "value": "uniqueSolutions"
                            },
                            "id": 7789,
                            "name": "Identifier",
                            "src": "2257:15:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7774,
                              "type": "bytes32",
                              "value": "hashedInput"
                            },
                            "id": 7790,
                            "name": "Identifier",
                            "src": "2273:11:6"
                          }
                        ],
                        "id": 7791,
                        "name": "IndexAccess",
                        "src": "2257:28:6"
                      }
                    ],
                    "id": 7792,
                    "name": "VariableDeclarationStatement",
                    "src": "2234:51:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_46042db2ac726d9a89755cb100442f32f1d606f7d6772e1be8a3f85272bbf08b",
                                  "typeString": "literal_string \"Solution Not Exist\""
                                }
                              ],
                              "overloadedDeclarations": [
                                8774,
                                8775
                              ],
                              "referencedDeclaration": 8775,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7793,
                            "name": "Identifier",
                            "src": "2295:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "from",
                                  "referencedDeclaration": 7683,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7788,
                                      "type": "struct SolnSquareVerifier.Solution storage pointer",
                                      "value": "sol"
                                    },
                                    "id": 7794,
                                    "name": "Identifier",
                                    "src": "2303:3:6"
                                  }
                                ],
                                "id": 7795,
                                "name": "MemberAccess",
                                "src": "2303:8:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)",
                                      "value": "address"
                                    },
                                    "id": 7796,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "2315:7:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "307830",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0x0"
                                    },
                                    "id": 7797,
                                    "name": "Literal",
                                    "src": "2323:3:6"
                                  }
                                ],
                                "id": 7798,
                                "name": "FunctionCall",
                                "src": "2315:12:6"
                              }
                            ],
                            "id": 7799,
                            "name": "BinaryOperation",
                            "src": "2303:24:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "536f6c7574696f6e204e6f74204578697374",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Solution Not Exist\"",
                              "value": "Solution Not Exist"
                            },
                            "id": 7800,
                            "name": "Literal",
                            "src": "2329:20:6"
                          }
                        ],
                        "id": 7801,
                        "name": "FunctionCall",
                        "src": "2295:55:6"
                      }
                    ],
                    "id": 7802,
                    "name": "ExpressionStatement",
                    "src": "2295:55:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_2f43e624d631247dcc0105263272764faddc9296437e3746931a18d1d2af1c15",
                                  "typeString": "literal_string \"Solution Was Registered\""
                                }
                              ],
                              "overloadedDeclarations": [
                                8774,
                                8775
                              ],
                              "referencedDeclaration": 8775,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7803,
                            "name": "Identifier",
                            "src": "2360:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "isRegistered",
                                  "referencedDeclaration": 7679,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7788,
                                      "type": "struct SolnSquareVerifier.Solution storage pointer",
                                      "value": "sol"
                                    },
                                    "id": 7804,
                                    "name": "Identifier",
                                    "src": "2369:3:6"
                                  }
                                ],
                                "id": 7805,
                                "name": "MemberAccess",
                                "src": "2369:16:6"
                              }
                            ],
                            "id": 7806,
                            "name": "UnaryOperation",
                            "src": "2368:17:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "536f6c7574696f6e205761732052656769737465726564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Solution Was Registered\"",
                              "value": "Solution Was Registered"
                            },
                            "id": 7807,
                            "name": "Literal",
                            "src": "2387:25:6"
                          }
                        ],
                        "id": 7808,
                        "name": "FunctionCall",
                        "src": "2360:53:6"
                      }
                    ],
                    "id": 7809,
                    "name": "ExpressionStatement",
                    "src": "2360:53:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c54f723a55acd491f90e1ffd2ee0dfe57e7b0749c089cc83a8373ef7eac21dca",
                                  "typeString": "literal_string \"You did not create this solution\""
                                }
                              ],
                              "overloadedDeclarations": [
                                8774,
                                8775
                              ],
                              "referencedDeclaration": 8775,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7810,
                            "name": "Identifier",
                            "src": "2423:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "from",
                                  "referencedDeclaration": 7683,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7788,
                                      "type": "struct SolnSquareVerifier.Solution storage pointer",
                                      "value": "sol"
                                    },
                                    "id": 7811,
                                    "name": "Identifier",
                                    "src": "2431:3:6"
                                  }
                                ],
                                "id": 7812,
                                "name": "MemberAccess",
                                "src": "2431:8:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 8771,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 7813,
                                    "name": "Identifier",
                                    "src": "2443:3:6"
                                  }
                                ],
                                "id": 7814,
                                "name": "MemberAccess",
                                "src": "2443:10:6"
                              }
                            ],
                            "id": 7815,
                            "name": "BinaryOperation",
                            "src": "2431:22:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "596f7520646964206e6f7420637265617465207468697320736f6c7574696f6e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"You did not create this solution\"",
                              "value": "You did not create this solution"
                            },
                            "id": 7816,
                            "name": "Literal",
                            "src": "2455:34:6"
                          }
                        ],
                        "id": 7817,
                        "name": "FunctionCall",
                        "src": "2423:67:6"
                      }
                    ],
                    "id": 7818,
                    "name": "ExpressionStatement",
                    "src": "2423:67:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_mint",
                              "referencedDeclaration": 793,
                              "type": "function (address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 8823,
                                  "type": "contract super SolnSquareVerifier",
                                  "value": "super"
                                },
                                "id": 7819,
                                "name": "Identifier",
                                "src": "2501:5:6"
                              }
                            ],
                            "id": 7821,
                            "name": "MemberAccess",
                            "src": "2501:11:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7770,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 7822,
                            "name": "Identifier",
                            "src": "2513:2:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "id",
                              "referencedDeclaration": 7681,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7788,
                                  "type": "struct SolnSquareVerifier.Solution storage pointer",
                                  "value": "sol"
                                },
                                "id": 7823,
                                "name": "Identifier",
                                "src": "2517:3:6"
                              }
                            ],
                            "id": 7824,
                            "name": "MemberAccess",
                            "src": "2517:6:6"
                          }
                        ],
                        "id": 7825,
                        "name": "FunctionCall",
                        "src": "2501:23:6"
                      }
                    ],
                    "id": 7826,
                    "name": "ExpressionStatement",
                    "src": "2501:23:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1332,
                              "type": "function (uint256)",
                              "value": "setTokenURI"
                            },
                            "id": 7827,
                            "name": "Identifier",
                            "src": "2534:11:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "id",
                              "referencedDeclaration": 7681,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7788,
                                  "type": "struct SolnSquareVerifier.Solution storage pointer",
                                  "value": "sol"
                                },
                                "id": 7828,
                                "name": "Identifier",
                                "src": "2546:3:6"
                              }
                            ],
                            "id": 7829,
                            "name": "MemberAccess",
                            "src": "2546:6:6"
                          }
                        ],
                        "id": 7830,
                        "name": "FunctionCall",
                        "src": "2534:19:6"
                      }
                    ],
                    "id": 7831,
                    "name": "ExpressionStatement",
                    "src": "2534:19:6"
                  }
                ],
                "id": 7832,
                "name": "Block",
                "src": "2142:418:6"
              }
            ],
            "id": 7833,
            "name": "FunctionDefinition",
            "src": "2073:487:6"
          }
        ],
        "id": 7834,
        "name": "ContractDefinition",
        "src": "300:2262:6"
      }
    ],
    "id": 7835,
    "name": "SourceUnit",
    "src": "0:2563:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {
    "1639733866625": {
      "events": {},
      "links": {},
      "address": "0x21198df385a4D0425f71d5a6015153B75933ACF7",
      "transactionHash": "0x2334b60d554889dc07c43e5dc4761a4f9f93114d4079958c19c1bf1dba4d58a3"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-18T01:01:02.015Z",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}